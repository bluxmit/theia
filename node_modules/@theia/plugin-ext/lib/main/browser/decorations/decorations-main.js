"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DecorationsMainImpl = void 0;
/********************************************************************************
 * Copyright (C) 2019 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var plugin_api_rpc_1 = require("../../../common/plugin-api-rpc");
var event_1 = require("@theia/core/lib/common/event");
var vscode_uri_1 = require("@theia/core/shared/vscode-uri");
var cancellation_1 = require("@theia/core/lib/common/cancellation");
var uri_1 = require("@theia/core/lib/common/uri");
var decorations_service_1 = require("@theia/core/lib/browser/decorations-service");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// some code copied and modified from https://github.com/microsoft/vscode/blob/1.52.1/src/vs/workbench/api/browser/mainThreadDecorations.ts#L85
var DecorationRequestsQueue = /** @class */ (function () {
    function DecorationRequestsQueue(proxy, handle) {
        this.proxy = proxy;
        this.handle = handle;
        this.idPool = 0;
        this.requests = new Map();
        this.resolver = new Map();
    }
    DecorationRequestsQueue.prototype.enqueue = function (uri, token) {
        var _this = this;
        var id = ++this.idPool;
        var result = new Promise(function (resolve) {
            _this.requests.set(id, { id: id, uri: vscode_uri_1.URI.parse(uri.toString()) });
            _this.resolver.set(id, resolve);
            _this.processQueue();
        });
        token.onCancellationRequested(function () {
            _this.requests.delete(id);
            _this.resolver.delete(id);
        });
        return result;
    };
    DecorationRequestsQueue.prototype.processQueue = function () {
        var _this = this;
        if (typeof this.timer === 'number') {
            // already queued
            return;
        }
        this.timer = setTimeout(function () {
            // make request
            var requests = _this.requests;
            var resolver = _this.resolver;
            _this.proxy.$provideDecorations(_this.handle, __spread(requests.values()), cancellation_1.CancellationToken.None).then(function (data) {
                var e_1, _a;
                try {
                    for (var resolver_1 = __values(resolver), resolver_1_1 = resolver_1.next(); !resolver_1_1.done; resolver_1_1 = resolver_1.next()) {
                        var _b = __read(resolver_1_1.value, 2), id = _b[0], resolve = _b[1];
                        resolve(data[id]);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (resolver_1_1 && !resolver_1_1.done && (_a = resolver_1.return)) _a.call(resolver_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            });
            // reset
            _this.requests = new Map();
            _this.resolver = new Map();
            _this.timer = undefined;
        }, 0);
    };
    return DecorationRequestsQueue;
}());
var DecorationsMainImpl = /** @class */ (function () {
    function DecorationsMainImpl(rpc, container) {
        this.providers = new Map();
        this.proxy = rpc.getProxy(plugin_api_rpc_1.MAIN_RPC_CONTEXT.DECORATIONS_EXT);
        this.decorationsService = container.get(decorations_service_1.DecorationsService);
    }
    DecorationsMainImpl.prototype.dispose = function () {
        this.providers.forEach(function (value) { return value.forEach(function (v) { return v.dispose(); }); });
        this.providers.clear();
    };
    DecorationsMainImpl.prototype.$registerDecorationProvider = function (handle) {
        return __awaiter(this, void 0, void 0, function () {
            var emitter, queue, registration;
            var _this = this;
            return __generator(this, function (_a) {
                emitter = new event_1.Emitter();
                queue = new DecorationRequestsQueue(this.proxy, handle);
                registration = this.decorationsService.registerDecorationsProvider({
                    onDidChange: emitter.event,
                    provideDecorations: function (uri, token) { return __awaiter(_this, void 0, void 0, function () {
                        var data, _a, bubble, tooltip, letter, themeColor;
                        return __generator(this, function (_b) {
                            switch (_b.label) {
                                case 0: return [4 /*yield*/, queue.enqueue(uri, token)];
                                case 1:
                                    data = _b.sent();
                                    if (!data) {
                                        return [2 /*return*/, undefined];
                                    }
                                    _a = __read(data, 4), bubble = _a[0], tooltip = _a[1], letter = _a[2], themeColor = _a[3];
                                    return [2 /*return*/, {
                                            weight: 10,
                                            bubble: bubble !== null && bubble !== void 0 ? bubble : false,
                                            colorId: themeColor === null || themeColor === void 0 ? void 0 : themeColor.id,
                                            tooltip: tooltip,
                                            letter: letter
                                        }];
                            }
                        });
                    }); }
                });
                this.providers.set(handle, [emitter, registration]);
                return [2 /*return*/];
            });
        });
    };
    DecorationsMainImpl.prototype.$onDidChange = function (handle, resources) {
        var providerSet = this.providers.get(handle);
        if (providerSet) {
            var _a = __read(providerSet, 1), emitter = _a[0];
            emitter.fire(resources && resources.map(function (r) { return new uri_1.default(vscode_uri_1.URI.revive(r).toString()); }));
        }
    };
    DecorationsMainImpl.prototype.$unregisterDecorationProvider = function (handle) {
        var provider = this.providers.get(handle);
        if (provider) {
            provider.forEach(function (p) { return p.dispose(); });
            this.providers.delete(handle);
        }
    };
    return DecorationsMainImpl;
}());
exports.DecorationsMainImpl = DecorationsMainImpl;
//# sourceMappingURL=decorations-main.js.map