"use strict";
/********************************************************************************
 * Copyright (C) 2019 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DecorationsExtImpl = void 0;
var plugin_api_rpc_1 = require("../common/plugin-api-rpc");
var types_impl_1 = require("./types-impl");
var types_impl_2 = require("./types-impl");
var path_1 = require("path");
var DecorationsExtImpl = /** @class */ (function () {
    function DecorationsExtImpl(rpc) {
        this.rpc = rpc;
        this.proxy = rpc.getProxy(plugin_api_rpc_1.PLUGIN_RPC_CONTEXT.DECORATIONS_MAIN);
        this.providersMap = new Map();
    }
    DecorationsExtImpl.prototype.registerFileDecorationProvider = function (provider, pluginInfo) {
        var _this = this;
        var handle = DecorationsExtImpl.handle++;
        this.providersMap.set(handle, { provider: provider, pluginInfo: pluginInfo });
        this.proxy.$registerDecorationProvider(handle);
        var listener = provider.onDidChangeFileDecorations && provider.onDidChangeFileDecorations(function (e) {
            var e_1, _a, e_2, _b;
            if (!e) {
                _this.proxy.$onDidChange(handle, null);
                return;
            }
            var array = Array.isArray(e) ? e : [e];
            if (array.length <= DecorationsExtImpl.maxEventSize) {
                _this.proxy.$onDidChange(handle, array);
                return;
            }
            // too many resources per event. pick one resource per folder, starting
            // with parent folders
            var mapped = array.map(function (uri) { return ({ uri: uri, rank: (uri.path.match(/\//g) || []).length }); });
            var groups = groupBy(mapped, function (a, b) { return a.rank - b.rank; });
            var picked = [];
            try {
                outer: for (var groups_1 = __values(groups), groups_1_1 = groups_1.next(); !groups_1_1.done; groups_1_1 = groups_1.next()) {
                    var uris = groups_1_1.value;
                    var lastDirname = void 0;
                    try {
                        for (var uris_1 = (e_2 = void 0, __values(uris)), uris_1_1 = uris_1.next(); !uris_1_1.done; uris_1_1 = uris_1.next()) {
                            var obj = uris_1_1.value;
                            var myDirname = path_1.dirname(obj.uri.path);
                            if (lastDirname !== myDirname) {
                                lastDirname = myDirname;
                                if (picked.push(obj.uri) >= DecorationsExtImpl.maxEventSize) {
                                    break outer;
                                }
                            }
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (uris_1_1 && !uris_1_1.done && (_b = uris_1.return)) _b.call(uris_1);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (groups_1_1 && !groups_1_1.done && (_a = groups_1.return)) _a.call(groups_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            _this.proxy.$onDidChange(handle, picked);
        });
        return new types_impl_2.Disposable(function () {
            listener === null || listener === void 0 ? void 0 : listener.dispose();
            _this.proxy.$unregisterDecorationProvider(handle);
            _this.providersMap.delete(handle);
        });
        function groupBy(data, compareFn) {
            var e_3, _a;
            var result = [];
            var currentGroup = undefined;
            try {
                for (var _b = __values(data.slice(0).sort(compareFn)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var element = _c.value;
                    if (!currentGroup || compareFn(currentGroup[0], element) !== 0) {
                        currentGroup = [element];
                        result.push(currentGroup);
                    }
                    else {
                        currentGroup.push(element);
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
            return result;
        }
    };
    DecorationsExtImpl.prototype.$provideDecorations = function (handle, requests, token) {
        return __awaiter(this, void 0, void 0, function () {
            var result, _a, provider, pluginInfo;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.providersMap.has(handle)) {
                            // might have been unregistered in the meantime
                            return [2 /*return*/, Object.create(null)];
                        }
                        result = Object.create(null);
                        _a = this.providersMap.get(handle), provider = _a.provider, pluginInfo = _a.pluginInfo;
                        return [4 /*yield*/, Promise.all(requests.map(function (request) { return __awaiter(_this, void 0, void 0, function () {
                                var uri, id, data, err_1;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            _a.trys.push([0, 2, , 3]);
                                            uri = request.uri, id = request.id;
                                            return [4 /*yield*/, Promise.resolve(provider.provideFileDecoration(types_impl_1.URI.revive(uri), token))];
                                        case 1:
                                            data = _a.sent();
                                            if (!data) {
                                                return [2 /*return*/];
                                            }
                                            try {
                                                types_impl_2.FileDecoration.validate(data);
                                                result[id] = [data.propagate, data.tooltip, data.badge, data.color];
                                            }
                                            catch (e) {
                                                console.warn("INVALID decoration from extension '" + pluginInfo.name + "': " + e);
                                            }
                                            return [3 /*break*/, 3];
                                        case 2:
                                            err_1 = _a.sent();
                                            console.error(err_1);
                                            return [3 /*break*/, 3];
                                        case 3: return [2 /*return*/];
                                    }
                                });
                            }); }))];
                    case 1:
                        _b.sent();
                        return [2 /*return*/, result];
                }
            });
        });
    };
    DecorationsExtImpl.handle = 0;
    DecorationsExtImpl.maxEventSize = 250;
    return DecorationsExtImpl;
}());
exports.DecorationsExtImpl = DecorationsExtImpl;
//# sourceMappingURL=decorations.js.map