"use strict";
/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreferenceArrayInputRenderer = void 0;
var inversify_1 = require("@theia/core/shared/inversify");
var preference_node_renderer_1 = require("./preference-node-renderer");
var PreferenceArrayInputRenderer = /** @class */ (function (_super) {
    __extends(PreferenceArrayInputRenderer, _super);
    function PreferenceArrayInputRenderer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.existingValues = new Map();
        return _this;
    }
    PreferenceArrayInputRenderer.prototype.createInteractable = function (parent) {
        var e_1, _a;
        var wrapper = document.createElement('ul');
        wrapper.classList.add('preference-array');
        this.wrapper = wrapper;
        var currentValue = this.getValue();
        if (Array.isArray(currentValue)) {
            try {
                for (var _b = __values(currentValue.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), index = _d[0], value = _d[1];
                    var node = this.createExistingValue(value);
                    wrapper.appendChild(node);
                    this.existingValues.set(value, { node: node, index: index });
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        var inputWrapper = this.createInput();
        wrapper.appendChild(inputWrapper);
        parent.appendChild(wrapper);
    };
    PreferenceArrayInputRenderer.prototype.getFallbackValue = function () {
        return [];
    };
    PreferenceArrayInputRenderer.prototype.createExistingValue = function (value) {
        var existingValue = document.createElement('li');
        existingValue.classList.add('preference-array-element');
        var valueWrapper = document.createElement('span');
        valueWrapper.classList.add('preference-array-element-val');
        valueWrapper.textContent = value;
        existingValue.appendChild(valueWrapper);
        var iconWrapper = document.createElement('span');
        iconWrapper.classList.add('preference-array-element-btn', 'remove-btn');
        var handler = this.removeItem.bind(this, value);
        iconWrapper.onclick = handler;
        iconWrapper.onkeydown = handler;
        iconWrapper.setAttribute('role', 'button');
        iconWrapper.tabIndex = 0;
        existingValue.appendChild(iconWrapper);
        var icon = document.createElement('i');
        icon.classList.add('preference-array-clear-item');
        iconWrapper.appendChild(icon);
        return existingValue;
    };
    PreferenceArrayInputRenderer.prototype.createInput = function () {
        var inputWrapper = document.createElement('li');
        this.inputWrapper = inputWrapper;
        var input = document.createElement('input');
        inputWrapper.appendChild(input);
        this.interactable = input;
        input.classList.add('preference-array-input', 'theia-input');
        input.type = 'text';
        input.placeholder = 'Add Value...';
        input.onkeydown = this.handleEnter.bind(this);
        input.setAttribute('aria-label', 'Preference String Input');
        var iconWrapper = document.createElement('span');
        inputWrapper.appendChild(iconWrapper);
        iconWrapper.classList.add('preference-array-element-btn', 'add-btn');
        iconWrapper.setAttribute('role', 'button');
        var handler = this.addItem.bind(this);
        iconWrapper.onclick = handler;
        iconWrapper.onkeydown = handler;
        iconWrapper.tabIndex = 0;
        iconWrapper.setAttribute('aria-label', 'Submit Preference Input');
        var icon = document.createElement('i');
        icon.classList.add('fa', 'fa-plus');
        iconWrapper.appendChild(icon);
        return inputWrapper;
    };
    PreferenceArrayInputRenderer.prototype.doHandleValueChange = function () {
        var e_2, _a, e_3, _b;
        this.updateInspection();
        var values = this.getValue();
        var newValues = new (Set.bind.apply(Set, __spread([void 0], values)))();
        try {
            for (var _c = __values(this.existingValues.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var _e = __read(_d.value, 2), value = _e[0], row = _e[1];
                if (!newValues.has(value)) {
                    row.node.remove();
                    this.existingValues.delete(value);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _f = __values(values.entries()), _g = _f.next(); !_g.done; _g = _f.next()) {
                var _h = __read(_g.value, 2), index = _h[0], value = _h[1];
                var row = this.existingValues.get(value);
                if (row) {
                    row.index = index;
                }
                else {
                    row = { node: this.createExistingValue(value), index: index };
                    this.existingValues.set(value, row);
                }
                if (this.wrapper.children[index] !== row.node) {
                    this.wrapper.children[index].insertAdjacentElement('beforebegin', row.node);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this.updateModificationStatus();
    };
    PreferenceArrayInputRenderer.prototype.removeItem = function (value) {
        var row = this.existingValues.get(value);
        if (row) {
            row.node.remove();
            this.existingValues.delete(value);
            this.setPreferenceImmediately(this.getOrderedValues());
        }
    };
    PreferenceArrayInputRenderer.prototype.handleEnter = function (e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            this.addItem();
        }
    };
    PreferenceArrayInputRenderer.prototype.addItem = function () {
        var newItem = this.interactable.value;
        if (newItem && !this.existingValues.has(newItem)) {
            var node = this.createExistingValue(newItem);
            this.inputWrapper.insertAdjacentElement('beforebegin', node);
            this.existingValues.set(newItem, { node: node, index: this.existingValues.size });
            this.setPreferenceImmediately(this.getOrderedValues());
        }
        this.interactable.value = '';
    };
    PreferenceArrayInputRenderer.prototype.getOrderedValues = function () {
        return Array.from(this.existingValues.entries())
            .sort(function (_a, _b) {
            var _c = __read(_a, 2), a = _c[1];
            var _d = __read(_b, 2), b = _d[1];
            return a.index - b.index;
        })
            .map(function (_a) {
            var _b = __read(_a, 1), value = _b[0];
            return value;
        });
    };
    PreferenceArrayInputRenderer.prototype.dispose = function () {
        this.existingValues.clear();
        _super.prototype.dispose.call(this);
    };
    PreferenceArrayInputRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceArrayInputRenderer);
    return PreferenceArrayInputRenderer;
}(preference_node_renderer_1.PreferenceLeafNodeRenderer));
exports.PreferenceArrayInputRenderer = PreferenceArrayInputRenderer;
//# sourceMappingURL=preference-array-input.js.map