"use strict";
/********************************************************************************
 * Copyright (C) 2021 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeytarServiceImpl = void 0;
var inversify_1 = require("inversify");
var common_1 = require("../common");
var keytar = require("keytar");
var KeytarServiceImpl = /** @class */ (function () {
    function KeytarServiceImpl() {
    }
    KeytarServiceImpl_1 = KeytarServiceImpl;
    KeytarServiceImpl.prototype.setPassword = function (service, account, password) {
        return __awaiter(this, void 0, void 0, function () {
            var index, chunk, hasNextChunk, passwordChunk, content;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(common_1.isWindows && password.length > KeytarServiceImpl_1.MAX_PASSWORD_LENGTH)) return [3 /*break*/, 4];
                        index = 0;
                        chunk = 0;
                        hasNextChunk = true;
                        _a.label = 1;
                    case 1:
                        if (!hasNextChunk) return [3 /*break*/, 3];
                        passwordChunk = password.substring(index, index + KeytarServiceImpl_1.PASSWORD_CHUNK_SIZE);
                        index += KeytarServiceImpl_1.PASSWORD_CHUNK_SIZE;
                        hasNextChunk = password.length - index > 0;
                        content = {
                            content: passwordChunk,
                            hasNextChunk: hasNextChunk
                        };
                        return [4 /*yield*/, keytar.setPassword(service, chunk ? account + "-" + chunk : account, JSON.stringify(content))];
                    case 2:
                        _a.sent();
                        chunk++;
                        return [3 /*break*/, 1];
                    case 3: return [3 /*break*/, 6];
                    case 4: return [4 /*yield*/, keytar.setPassword(service, account, password)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    KeytarServiceImpl.prototype.deletePassword = function (service, account) {
        return keytar.deletePassword(service, account);
    };
    KeytarServiceImpl.prototype.getPassword = function (service, account) {
        return __awaiter(this, void 0, void 0, function () {
            var password, _a, content, hasNextChunk, index, nextChunk, result, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4 /*yield*/, keytar.getPassword(service, account)];
                    case 1:
                        password = _c.sent();
                        if (!password) return [3 /*break*/, 7];
                        _c.label = 2;
                    case 2:
                        _c.trys.push([2, 6, , 7]);
                        _a = JSON.parse(password), content = _a.content, hasNextChunk = _a.hasNextChunk;
                        if (!content || !hasNextChunk) {
                            return [2 /*return*/, password];
                        }
                        index = 1;
                        _c.label = 3;
                    case 3:
                        if (!hasNextChunk) return [3 /*break*/, 5];
                        return [4 /*yield*/, keytar.getPassword(service, account + "-" + index++)];
                    case 4:
                        nextChunk = _c.sent();
                        result = JSON.parse(nextChunk);
                        content += result.content;
                        hasNextChunk = result.hasNextChunk;
                        return [3 /*break*/, 3];
                    case 5: return [2 /*return*/, content];
                    case 6:
                        _b = _c.sent();
                        return [2 /*return*/, password];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    KeytarServiceImpl.prototype.findPassword = function (service) {
        return __awaiter(this, void 0, void 0, function () {
            var password;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, keytar.findPassword(service)];
                    case 1:
                        password = _a.sent();
                        if (password) {
                            return [2 /*return*/, password];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    KeytarServiceImpl.prototype.findCredentials = function (service) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, keytar.findCredentials(service)];
            });
        });
    };
    var KeytarServiceImpl_1;
    KeytarServiceImpl.MAX_PASSWORD_LENGTH = 2500;
    KeytarServiceImpl.PASSWORD_CHUNK_SIZE = KeytarServiceImpl_1.MAX_PASSWORD_LENGTH - 100;
    KeytarServiceImpl = KeytarServiceImpl_1 = __decorate([
        inversify_1.injectable()
    ], KeytarServiceImpl);
    return KeytarServiceImpl;
}());
exports.KeytarServiceImpl = KeytarServiceImpl;
//# sourceMappingURL=keytar-server.js.map